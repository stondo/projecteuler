use crate::common::fibonacci;

// Rust: Even Fibonacci numbers

// Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

pub fn sum_even_valued_fibo_below(below: u128) -> u128 {
    return (1u128..)
        .map(|n| fibonacci(n))
        .filter(|n| n % 2 == 0 && *n != 0u128)
        .take_while(|n| *n < below)
        .fold(0, |acc, i| acc + i);
}

#[cfg(test)]
mod tests {
    // Note this useful idiom: importing names from outer (for mod tests) scope.
    use super::*;

    #[test]
    fn test_sum_even_valued_fibo_below_below_4000000() {
        assert_eq!(sum_even_valued_fibo_below(4000000), 4613732);
    }
}
